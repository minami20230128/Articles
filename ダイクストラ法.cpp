//・ダイクストラ法とは
//主に、ある地点を始点として枝分かれした道の中から最短距離を求める問題などに使われるアルゴリズム
//1. 頂点集合全体をVとし、始点からの最短経路(最短距離)が既に確定した頂点集合をSとする。
//2. 現時点で経路が判明している頂点のうち、始点からの距離が最小となる頂点vを新たにSに追加する。
//3. まだSに含まれていない頂点集合(V - S)のうちvと接する各頂点について、既に求めた最短距離をもとに始点からの最短距離を更新する。
//4. 全ての頂点が確定するまで(V - Sが空になるまで)2と3を繰り返す。

//┌─────7─────B─────2─────┐
//│           │           │
//│           1           │
//│           │           │
//A-────4─────C─────6────-E
//│                       │
//│                       │
//│                       │
//└─────3─────D─────5─────┘

//例えば、上図の道においてAからEの最短経路を求める際は以下のように計算する

//始点Aから隣接した地点B、C、Dまでの最短距離を求める(A-B=7、A-C=4、A-D=3)
//AからC・Dまでの最短距離も確定したので、Sに入れる
//まだ確定していないBまでの最短距離を確定する(A-B=7、A-C-B=5)
//Bまでの最短距離を7->5に更新し、Sに入れる
//最後に、Eまでの最短距離を求める(B-E=5+2=7、C-E=4+6=10、D-E=3+5=8)

//よって、A-B-Eの経路が最短である

