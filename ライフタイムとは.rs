//・ライフタイムとは
//変数が生成〜破棄されるまでの期間
//・あるデータにアクセスできるのは一つの変数だけ(似た機能がC++のunique pointer)
//・アクセス権には「読み出し」「書き込み」の2種類がある
//など、Rustではメモリ破壊を防ぐため厳密に管理されている

fn main(){
    let r;

    {
        let x = 5; // xがここにある
        r = &x;
    } // ここでxがスコープから外れる

    println!("r: {}", r); // xはもう捨ててあるので、rが参照する先はない -> エラー
}

//実行結果: error[E0597]: `x` does not live long enough